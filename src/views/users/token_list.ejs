<% layout('users/home') %>
<div data-page="token-list" class="p-4 sm:ml-64">
    <h1 class="text-2xl font-bold mb-6 text-center">Token List</h1>
        <div class="flex justify-center">
            <table class="table-auto">
                <thead>
                    <tr>
                        <th class="px-4 py-2">Token Name</th>
                        <th class="px-4 py-2">Price real time</th>
                        <th class="px-4 py-2">Key 1</th>
                        <th class="px-4 py-2">Key 2</th>
                        <th class="px-4 py-2">Key 3</th>
                        <th class="px-4 py-2">Key 4</th>
                        <th class="px-4 py-2">Key 5</th>
                        <th class="px-4 py-2">Target 1</th>
                        <th class="px-4 py-2">Target 2</th>
                        <th class="px-4 py-2">Target 3</th>
                        <th class="px-4 py-2">Target 4</th>
                        <th class="px-4 py-2">Target 5</th>
                        <th class="px-4 py-2">Target 6</th>
                        <th class="px-4 py-2">Target 7</th>
                        <th class="px-4 py-2">Exchange</th>
                        
                    </tr>
                </thead>
                <tbody>
                    <% tokens.forEach(token=> { %>
                        <tr>
                            <td class="border px-4 py-2">
                                <%= token.tokenName %>
                            </td>
                            <td class="border px-4 py-2" data-token="<%= token.tokenName %>">
                            </td>
                            <td class="border px-4 py-2">
                                <%= token.key1 %>
                            </td>
                            <td class="border px-4 py-2">
                                <%= token.key2 %>
                            </td>
                            <td class="border px-4 py-2">
                                <%= token.key3 %>
                            </td>
                            <td class="border px-4 py-2">
                                <%= token.key4 %>
                            </td>
                            <td class="border px-4 py-2">
                                <%= token.key5 %>
                            </td>
                            <td class="border px-4 py-2">
                                <%= token.target1 %>
                            </td>
                            <td class="border px-4 py-2">
                                <%= token.target2 %>
                            </td>
                            <td class="border px-4 py-2">
                                <%= token.target3 %>
                            </td>
                            <td class="border px-4 py-2">
                                <%= token.target4 %>
                            </td>
                            <td class="border px-4 py-2">
                                <%= token.target5 %>
                            </td>
                            <td class="border px-4 py-2">
                                <%= token.target6 %>
                            </td>
                            <td class="border px-4 py-2">
                                <%= token.target7 %>
                            </td>
                            <td class="border px-4 py-2">
                                <%= token.exchange %>
                            </td>
                        </tr>
                        <% }) %>
                </tbody>
            </table>
        </div>
</div>

<script>
    const socketServerUrl = '<%= process.env.SITE_URL %>';
    const tokens = <%- JSON.stringify(tokens) %>; // Lấy danh sách token từ server
    const socket = io(socketServerUrl, {transports: ['websocket']});
    socket.on('connect', () => {
      console.log('Socket.IO connection opened');
      socket.emit('subscribeToTokens', tokens); // Gửi danh sách token đến server
    });
  
    socket.on('tokenPrices', (prices) => {
        // Cập nhật giá token vào các ô tương ứng
        console.log(prices);
        for (const [token, price] of Object.entries(prices)) {
        const priceCell = document.querySelector(`td[data-token="${token.split('/')[0]}"]`);
        if (priceCell) {
            priceCell.innerText = `$${price}`;
        }
        }
    });
  
    socket.on('disconnect', () => {
      console.log('Socket.IO connection closed');
    });
  
    socket.on('connect_error', (error) => {
      console.error('Socket.IO error:', error);
    });
  </script>